[% PROCESS _header.tt %]
[% PROCESS _message.tt %]
[% PROCESS _blocks.tt %]

[% BLOCK _check_type %]
  <table class="h-full cellspacing striped rowhover [% sub | html %] js-checks" style="display: none;">
    <tbody>
    [% FOREACH check = checks.$type; name = check.name %]
      <tr>
        <th>
          <div class="flex items-center min-w-max justify-between">
            [% check.name %]
            [% IF services.exists(name) %]
              [% s = services.$name; comment_count = s.comments.size; has_bp=0; PROCESS _status_service_attributes service=s service_comment_count=comment_count %]
            [% END %]
          </div>
        </th>
        [% IF type == "exists" || type == "obsolete" %]
          <td>
            [% state = 'PENDING' %]
            [% IF services.exists(name) %]
              [% IF s.has_been_checked == 0 %]
                [% state = 'PENDING' %]
              [% ELSIF s.state == 0 %]
                [% state = 'OK' %]
              [% ELSIF s.state == 1 %]
                [% state = 'WARNING' %]
              [% ELSIF s.state == 2 %]
                [% state = 'CRITICAL' %]
              [% ELSIF s.state == 3 %]
                [% state = 'UNKNOWN' %]
              [% END %]
            [% END %]
            <div class='status text-center badge [% state %]'>[% state %]</div>
          </td>
        [% END %]
        <td class="w-full"></td>
        <td>
          <div class="flexrow flex-nowrap gap-x-2">
            <div class="radiogroup" style="width: 135px; height: 20px;">
              <input type="radio" class="activeENABLED" value="on" id="[% check.id %]_on" name="check.[% check.id %]"[% IF type == "exists" || type == "obsolete" %]checked="checked"[% END %]><label for="[% check.id %]_on">On</label>
              [% IF type == "new" %]
              <input type="radio" value="new" id="[% check.id %]_new" name="check.[% check.id %]"[% IF type == "new" %]checked="checked"[% END %]><label for="[% check.id %]_new">New</label>
              [% END %]
              <input type="radio" value="off" id="[% check.id %]_off" name="check.[% check.id %]"[% IF type == "disabled" %]checked="checked"[% END %]><label for="[% check.id %]_off">Off</label>
            </div>
          </div>
        </td>
      </tr>
    [% END %]
    </tbody>
    [% IF checks.$type.size == 0 %]
    <tfoot>
      <tr>
        <td class="text-center textHINT">no [% type %] checks.</td>
      </tr>
    </tfoot>
    [% END %]
  </table>
[% END %]


<div class="flexrow 2xl:justify-between h-full w-[800px]">
  <div class="card w-full flexcol gap-0 flex-nowrap h-full min-h-[500px]">
    <div class="head justify-between" style="flex: 0 0 40px;">
      <div class="w-[100px]">
        <a href="agents.cgi" class="button header-button rounded w-[70px]" title="Go back to agent list"><i class="uil uil-angle-double-left"></i>Back</a>
      </div>
      <h3>[% IF agent.hostname != "new" %]Edit[% ELSE%]Add[% END %] Agent</h3>
      <div class="w-[120px]">
        [% PROCESS _button btn = {
          form   => { action => 'conf.cgi', },
          data   => { sub => 'objects', 'apply' => 'yes', 'reload' => 'yes', CSRFtoken => get_user_token(c), },
          button => { class => 'w-full', title => "Apply all changes and reload core", onclick => "return send_form_in_background(this);", html => '<i class="uil uil-sync"></i>Reload Core' },
        }%]
      </div>
    </div>
    <form action="agents.cgi" method="POST" class="flexcol gap-y-0 w-full h-[calc(100%-45px)]" onsubmit="setFormBtnSpinner(this)">
      <input type="hidden" name="CSRFtoken" value="[% get_user_token(c) %]">
      <input type="hidden" name="old_hostname" value="[% agent.hostname | html %]">
      <input type="hidden" name="old_backend" value="[% agent.peer_key | html %]">
      [% IF ! has_multiple_backends %]
      <input type="hidden" name="backend" value="[% (agent.peer_key || config_backends.keys.0) | html %]">
      [% END %]
      <div style="flex: 0 0 140px;">
        <table class="body cellspacing striped">
          <tbody>
            <tr>
              <th>Hostname</th>
              <td>
                <div class="flexrow flex-nowrap gap-x-1">
                  <input type="text" name="hostname" value="[% IF agent.hostname != 'new' %][% agent.hostname | html %][% END %]" class="flex-grow" required>
                  <span class="ml-2 text-right w-14 textTH font-semibold self-center">Section:</span>
                  <input type="text" name="section" value="[% agent.section | html %]" class="w-36" onfocus="this.click()" onclick="ajax_search.init(this, 'section', { url: 'agents.cgi?action=json&amp;type=section', emptymsg:'create new section', autosubmit:false })">
                </div>
              </td>
            </tr>
            <tr>
              <th>IP Address</th>
              <td>
                <div class="flexrow flex-nowrap gap-x-1">
                  <input type="text" name="ip" value="[% agent.ip | html %]" placeholder="automatic" class="flex-grow">
                  <span class="ml-2 text-right w-14 textTH font-semibold self-center">Port:</span>
                  <input type="text" name="port" value="[% agent.port | html %]" class="w-36" placeholder="8443">
                </div>
              </td>
            </tr>
            <tr>
              <th>Password</th>
              <td>
                <div class="flexrow flex-nowrap gap-x-1">
                  <div class="togglePassword relative flex-grow">
                    <input type="password" name="password" value="" class="w-full" placeholder="[% IF agent.password != '' %]change password[% ELSE %]enter agent password or macro, ex.: $USER9$[% END %]" autocomplete="new-password" [% IF agent.password == '' %]required[% END %]>
                    <i class="uil uil-eye-slash absolute z-10 right-0 top-0 mr-2 opacity-50 text-lg togglePassword"></i>
                  </div>
                  [% IF has_multiple_backends %]
                  <span class="ml-2 text-right w-14 textTH font-semibold self-center">Site:</span>
                  <input type="text" name="backend" value="[% peer_name(agent) | html %]" class="w-36" onfocus="this.click()" onclick="ajax_search.init(this, 'site', { url: 'agents.cgi?action=json&amp;type=site', emptymsg:'select an existing site', autosubmit:false })" required>
                  [% END %]
                </div>
              </td>
            </tr>
            <tr>
              <td colspan="2" align="center">
                <div class="flexrow flex-nowrap justify-evenly">
                  <button class="submit w-44" onclick="return send_form_in_background_with_callback(this, {action: 'scan'}, scan_callback );"><i class="uil uil-search"></i> rescan</button>
                  <button class="submit w-44 green" name="action" value="save"><i class="uil uil-save"></i> Save Changes</button>
                </div>
              </th>
            </tr>
          </tbody>
        </table>
      </div>
      <div class="head justify-between" style="flex: 0 0 40px;">
        <div class="grow"></div>
        <span class="tabs clickable text-center text-sm w-40 active" id="sub_1" onclick="set_sub(1)">Add New (<span class="js-type-1-size">[% checks.new.size %]</span>)</span>
        <span class="tabs clickable text-center text-sm w-40" id="sub_2" onclick="set_sub(2)">Active Checks (<span class="js-type-2-size">[% checks.exists.size %]</span>)</span>
        <span class="tabs clickable text-center text-sm w-40" id="sub_3" onclick="set_sub(3)">Obsolete Checks (<span class="js-type-3-size">[% checks.obsolete.size %]</span>)</span>
        <span class="tabs clickable text-center text-sm w-40" id="sub_4" onclick="set_sub(4)">Disabled Checks (<span class="js-type-4-size">[% checks.disabled.size %]</span>)</span>
        <div class="grow"></div>
      </div>
      <div id="checksTable" class="h-full overflow-auto">
        <div id="checksTableContent">
          [% PROCESS _check_type type="new" sub="sub_1" %]
          [% PROCESS _check_type type="exists" sub="sub_2" %]
          [% PROCESS _check_type type="obsolete" sub="sub_3" %]
          [% PROCESS _check_type type="disabled" sub="sub_4" %]
        </div>
      </div>
      <div class="footer" style="flex: 0 0 40px;">
        [% IF agent.hostname != "new" %]<button name="action" value="remove" class="hover-red w-32" onclick="return(confirm('really remove host: [% agent.hostname | html %]?'))"><i class="uil uil-trash-alt"></i> Delete</button>[% END %]
      </div>
    </form>
  </div>

  <div class="w-[350px] hidden xl:block"></div>
</div>

<script>
<!--
function scan_callback(form, success, data, textStatus, jqXHR) {
  btn = jQuery(form).find("DIV.spinner").parents("BUTTON");
  if(!success || (data && data.ok && data.ok == 0)) {
    if(!showMessageFromCookie()) {
      if(data && data.message) {
        thruk_message(data.ok, data.message);
      }
    }
    if(btn) {
      setBtnError(btn[0], "scan failed: "+(data ? data.message : 'unknown error'));
    }
    return;
  }

  btn = jQuery(form).find("DIV.spinner").parents("BUTTON");
  if(btn) {
    setBtnNoSpinner(btn[0]);
  }
  updateChecksTable(form);
}

function updateChecksTable(form) {
    var host    = jQuery(form).find("INPUT[name=hostname]").val();
    var backend = jQuery(form).find("INPUT[name=backend]").val();
    jQuery('#checksTable').html("<div class='spinner'><\/div>");
    var url = "agents.cgi #checksTableContent";
    var data = {
      action:   'edit',
      hostname: host,
      backend:  backend
    };
    jQuery('#checksTable').load(url, data, function(text, status, req) {
      if(status == "error") {
        thruk_message(1, "updating checks failed");
        jQuery('#checksTable').html("");
        return;
      }
      updateChecksTotals();
      if(lastActiveSub) {
        set_sub(lastActiveSub);
      }
    });
}

var totals = {};
function updateChecksTotals() {
  jQuery("TABLE.js-checks TBODY").each(function(i, tbody) {
    var num = tbody.rows.length;
    jQuery("SPAN.js-type-"+(i+1)+"-size").text(num);
    totals["sub_"+(i+1)] = num;
  });
}

jQuery(document).ready(function() {
  updateChecksTotals();
  // activate new tab if there are some...
  if(totals["sub_1"] > 0) {
    set_sub(1);
  } else {
    set_sub(2);
  }
});

-->
</script>


[% PROCESS _footer.tt %]
